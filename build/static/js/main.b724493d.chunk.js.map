{"version":3,"sources":["components/nav.jsx","store/actions/index.js","store/actions/actions-type.js","components/Interface.jsx","components/Code.jsx","App.js","data/alert.js","data/badge.js","data/button.js","data/card.js","data/tooltip.js","data/toast.js","commands.js","store/state/index.js","store/reducer/index.js","store/index.js","serviceWorker.js","index.js"],"names":["NavBar","useState","input","setInput","dispatch","useDispatch","generate","useCallback","type","payload","Navbar","bg","expand","Brand","href","className","Toggle","aria-controls","Collapse","id","Nav","Link","OverlayTrigger","placement","overlay","Tooltip","Form","inline","FormControl","value","onChange","e","target","placeholder","Button","variant","onClick","Code","output","useSelector","appreducer","jsx","Interface","text","html","onCopy","toastr","success","title","language","style","atomOneLight","App","error","useEffect","enabled","message","position","getState","state","transitionIn","transitionOut","Container","alert","badge","button","card","tooltip","toast","commands","InitialState","reducers","action","find","command","toastrReducer","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b724493d.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Navbar,Button,FormControl,Form,Nav,OverlayTrigger,Tooltip} from \"react-bootstrap\"\r\nimport { generateCommand } from '../store/actions';\r\nconst NavBar = () => {\r\n  const [input, setInput] = useState('');\r\n  const dispatch = useDispatch();\r\n  const generate = useCallback(() => {\r\n    if (input !== '') {\r\n      dispatch(generateCommand(input));\r\n    }\r\n  }, [input, dispatch]);\r\n  return (\r\n    <Navbar bg=\"white\" expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\"><i className=\"fab fa-bootstrap\"></i>Generator</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"ml-auto mr-4\">\r\n      <Nav.Link href=\"#home\" className=\"mylink\">\r\n      <OverlayTrigger\r\n      placement=\"left\"\r\n      overlay={\r\n        <Tooltip>\r\n         Commands\r\n        </Tooltip>\r\n      }>\r\n      <i className=\"far fa-keyboard\"/>\r\n      </OverlayTrigger></Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\"className=\"form-control rounded-0 form-control-sm mr-sm-2\" value={input}   onChange={e => setInput(e.target.value)}\r\n          placeholder=\"Enter command\"  />\r\n      <Button variant=\"btn btn-sm rounded-0 btn-light my-2 my-sm-0\"   onClick={generate}>\r\n          Generate</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { GENERATE_COMMAND } from './actions-type';\r\n\r\nexport const generateCommand = payload => {\r\n  return {\r\n    type: GENERATE_COMMAND,\r\n    payload: payload\r\n  };\r\n};\r\n","export const GENERATE_COMMAND = 'GENERATE_COMMAND';\r\n","import React from 'react';\r\nimport JsxParser from 'react-jsx-parser';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Code = () => {\r\n  const output = useSelector(({ appreducer }) => appreducer.output);\r\n  return (\r\n    <div>\r\n      <JsxParser jsx={output.jsx} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\nimport atomOneLight from 'react-syntax-highlighter/dist/esm/styles/hljs/atom-one-light';\r\n\r\nconst Interface = () => {\r\n  const output = useSelector(({ appreducer }) => appreducer.output);\r\n  return (\r\n    <div className=\"my-4\">\r\n    <div className=\"d-flex align-items-center\">\r\n    <h3 className=\"title\">Code:</h3>\r\n    <CopyToClipboard text={output.html} onCopy={()=>toastr.success(\"Code copied to clipboard!\")}>\r\n    <button type=\"button\" className=\"btn bg-white rounded-circle ml-auto\"  title=\"Copy code!\">\r\n    <i className=\"far fa-clipboard\"></i></button>\r\n    </CopyToClipboard>\r\n    </div>\r\n      {output.html ? (\r\n        <SyntaxHighlighter language=\"html\" style={atomOneLight}>{output.html}</SyntaxHighlighter>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interface;\r\n","import React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport ReduxToastr, { toastr } from 'react-redux-toastr';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.css';\nimport NavBar from './components/nav';\nimport Interface from './components/Interface';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\nimport Code from './components/Code';\n\nconst App = () => {\n  const output = useSelector(({ appreducer }) => appreducer.output);\n  const error = useSelector(({ appreducer }) => appreducer.error);\n  useEffect(() => {\n    if (error.enabled) toastr.error(error.message);\n  }, [error]);\n\n  return (\n    <div>\n      <ReduxToastr\n        position=\"bottom-right\"\n        getState={state => state.toastr}\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n      />\n      <NavBar />\n      {output.input ? (\n        <Container>\n          <div className=\"my-4\">\n            <h3 className=\"title\">Components:</h3>\n            <div className=\"interface-container \">\n              <Interface />\n            </div>\n          </div>\n          <Code />\n        </Container>\n      ) : (\n        <h1 className=\"warning\">\n          Please Enter command to generate Bootstrap component!\n        </h1>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const alert = {\r\n    input:\"alert\",\r\n    jsx:`<div>\r\n    <div className=\"alert alert-primary\" role=\"alert\">\r\n      A simple primary alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-secondary\" role=\"alert\">\r\n      A simple secondary alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-success\" role=\"alert\">\r\n      A simple success alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      A simple danger alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n      A simple warning alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-info\" role=\"alert\">\r\n      A simple info alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-light\" role=\"alert\">\r\n      A simple light alert—check it out!\r\n    </div>\r\n    <div className=\"alert alert-dark\" role=\"alert\">\r\n      A simple dark alert—check it out!\r\n    </div>\r\n  </div>\r\n  `,\r\n  html:`<div class=\"alert alert-primary\" role=\"alert\">\r\n  A simple primary alert—check it out!\r\n</div>\r\n<div class=\"alert alert-secondary\" role=\"alert\">\r\n  A simple secondary alert—check it out!\r\n</div>\r\n<div class=\"alert alert-success\" role=\"alert\">\r\n  A simple success alert—check it out!\r\n</div>\r\n<div class=\"alert alert-danger\" role=\"alert\">\r\n  A simple danger alert—check it out!\r\n</div>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n  A simple warning alert—check it out!\r\n</div>\r\n<div class=\"alert alert-info\" role=\"alert\">\r\n  A simple info alert—check it out!\r\n</div>\r\n<div class=\"alert alert-light\" role=\"alert\">\r\n  A simple light alert—check it out!\r\n</div>\r\n<div class=\"alert alert-dark\" role=\"alert\">\r\n  A simple dark alert—check it out!\r\n</div>`\r\n}\r\n\r\nexport default alert","const badge = {\r\n    input:\"badge\",\r\n    html:`<span class=\"badge badge-primary\">Primary</span>\r\n    <span class=\"badge badge-secondary\">Secondary</span>\r\n    <span class=\"badge badge-success\">Success</span>\r\n    <span class=\"badge badge-danger\">Danger</span>\r\n    <span class=\"badge badge-warning\">Warning</span>\r\n    <span class=\"badge badge-info\">Info</span>\r\n    <span class=\"badge badge-light\">Light</span>\r\n    <span class=\"badge badge-dark\">Dark</span>`,\r\n    jsx:`<div>\r\n    <span className=\"badge badge-primary\">Primary</span>\r\n    <span className=\"badge badge-secondary\">Secondary</span>\r\n    <span className=\"badge badge-success\">Success</span>\r\n    <span className=\"badge badge-danger\">Danger</span>\r\n    <span className=\"badge badge-warning\">Warning</span>\r\n    <span className=\"badge badge-info\">Info</span>\r\n    <span className=\"badge badge-light\">Light</span>\r\n    <span className=\"badge badge-dark\">Dark</span>\r\n  </div>\r\n  `\r\n}\r\n\r\nexport default badge","const button = [{\r\n    input:\"btn\",\r\n    html:`<button type=\"button\" class=\"btn btn-primary\">Primary</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">Secondary</button>\r\n    <button type=\"button\" class=\"btn btn-success\">Success</button>\r\n    <button type=\"button\" class=\"btn btn-danger\">Danger</button>\r\n    <button type=\"button\" class=\"btn btn-warning\">Warning</button>\r\n    <button type=\"button\" class=\"btn btn-info\">Info</button>\r\n    <button type=\"button\" class=\"btn btn-light\">Light</button>\r\n    <button type=\"button\" class=\"btn btn-dark\">Dark</button>\r\n    \r\n    <button type=\"button\" class=\"btn btn-link\">Link</button>`,\r\n    jsx:`<div>\r\n    <button type=\"button\" className=\"btn btn-primary\">Primary</button>\r\n    <button type=\"button\" className=\"btn btn-secondary\">Secondary</button>\r\n    <button type=\"button\" className=\"btn btn-success\">Success</button>\r\n    <button type=\"button\" className=\"btn btn-danger\">Danger</button>\r\n    <button type=\"button\" className=\"btn btn-warning\">Warning</button>\r\n    <button type=\"button\" className=\"btn btn-info\">Info</button>\r\n    <button type=\"button\" className=\"btn btn-light\">Light</button>\r\n    <button type=\"button\" className=\"btn btn-dark\">Dark</button>\r\n    <button type=\"button\" className=\"btn btn-link\">Link</button>\r\n  </div>`\r\n},\r\n{\r\n    input: 'btn-outline',\r\n    jsx:\r\n      `<div>\r\n      <button type=\"button\" className=\"btn btn-outline-primary\">Primary</button>\r\n      <button type=\"button\" className=\"btn btn-outline-secondary\">Secondary</button>\r\n      <button type=\"button\" className=\"btn btn-outline-success\">Success</button>\r\n      <button type=\"button\" className=\"btn btn-outline-danger\">Danger</button>\r\n      <button type=\"button\" className=\"btn btn-outline-warning\">Warning</button>\r\n      <button type=\"button\" className=\"btn btn-outline-info\">Info</button>\r\n      <button type=\"button\" className=\"btn btn-outline-light\">Light</button>\r\n      <button type=\"button\" className=\"btn btn-outline-dark\">Dark</button>\r\n    </div>\r\n    `,\r\n    html: `<button type=\"button\" class=\"btn btn-outline-primary\">Primary</button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\">Secondary</button>\r\n    <button type=\"button\" class=\"btn btn-outline-success\">Success</button>\r\n    <button type=\"button\" class=\"btn btn-outline-danger\">Danger</button>\r\n    <button type=\"button\" class=\"btn btn-outline-warning\">Warning</button>\r\n    <button type=\"button\" class=\"btn btn-outline-info\">Info</button>\r\n    <button type=\"button\" class=\"btn btn-outline-light\">Light</button>\r\n    <button type=\"button\" class=\"btn btn-outline-dark\">Dark</button>`\r\n  },\r\n  {\r\n      input:\"btn-lg\",\r\n      html:`<button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button>\r\n      <button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button>`,\r\n      jsx:`<button type=\"button\" className=\"btn btn-primary btn-lg\">Large button</button>\r\n      <button type=\"button\" className=\"btn btn-secondary btn-lg\">Large button</button>`\r\n  },\r\n  {\r\n    input:\"btn-sm\",\r\n    html:`<button type=\"button\" class=\"btn btn-primary btn-sm\">Small button</button>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm\">Small button</button>`,\r\n    jsx:`<button type=\"button\" className=\"btn btn-primary btn-sm\">Small button</button>\r\n    <button type=\"button\" className=\"btn btn-secondary btn-sm\">Small button</button>`\r\n},\r\n{\r\ninput:\"btn-block\",\r\nhtml:`<button type=\"button\" class=\"btn btn-primary btn-lg btn-block\">Block level button</button>\r\n<button type=\"button\" class=\"btn btn-secondary btn-lg btn-block\">Block level button</button>`,\r\njsx:`<button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">Block level button</button>\r\n<button type=\"button\" className=\"btn btn-secondary btn-lg btn-block\">Block level button</button>`\r\n},\r\n{\r\n    input:`btn-toolbar`,\r\n    html:`<div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n    <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n      <button type=\"button\" class=\"btn btn-secondary\">1</button>\r\n      <button type=\"button\" class=\"btn btn-secondary\">2</button>\r\n      <button type=\"button\" class=\"btn btn-secondary\">3</button>\r\n      <button type=\"button\" class=\"btn btn-secondary\">4</button>\r\n    </div>`,\r\n    jsx:`<div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n    <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n      <button type=\"button\" className=\"btn btn-secondary\">1</button>\r\n      <button type=\"button\" className=\"btn btn-secondary\">2</button>\r\n      <button type=\"button\" className=\"btn btn-secondary\">3</button>\r\n      <button type=\"button\" className=\"btn btn-secondary\">4</button>\r\n    </div>\r\n  </div>\r\n  `\r\n},\r\n{\r\n    input:\"btn-group-lg\",\r\n    html:`<div class=\"btn-group btn-group-lg\" role=\"group\">\r\n    <button type=\"button\" class=\"btn btn-secondary\">1</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">2</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">3</button>\r\n    </div>`,\r\n    jsx:`<div class=\"btn-group btn-group-lg\" role=\"group\"  aria-label=\"Basic example\">\r\n    <button type=\"button\" className=\"btn btn-secondary\">1</button>\r\n    <button type=\"button\" className=\"btn btn-secondary\">2</button>\r\n    <button type=\"button\" className=\"btn btn-secondary\">3</button>\r\n    </div>\r\n  `\r\n},\r\n{\r\n    input:\"btn-group-sm\",\r\n    html:`<div class=\"btn-group btn-group-sm\" role=\"group\">\r\n    <button type=\"button\" class=\"btn btn-secondary\">1</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">2</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">3</button>\r\n    </div>`,\r\n    jsx:`<div class=\"btn-group btn-group-sm\" role=\"group\"  aria-label=\"Basic example\">\r\n    <button type=\"button\" className=\"btn btn-secondary\">1</button>\r\n    <button type=\"button\" className=\"btn btn-secondary\">2</button>\r\n    <button type=\"button\" className=\"btn btn-secondary\">3</button>\r\n    </div>\r\n  `\r\n},\r\n{\r\n    input:\"btn-group\",\r\n    html:`<div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n    <button type=\"button\" class=\"btn btn-secondary\">Left</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">Middle</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\">Right</button>\r\n  </div>`,\r\n  jsx:`<div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" className=\"btn btn-secondary\">Left</button>\r\n  <button type=\"button\" className=\"btn btn-secondary\">Middle</button>\r\n  <button type=\"button\" className=\"btn btn-secondary\">Right</button>\r\n</div>\r\n`\r\n}]\r\n\r\nexport default button","const card = [\r\n    {\r\n        input:\"card\",\r\n        html:`<div class=\"card\" style=\"width: 18rem;\">\r\n        <img src=\"...\" class=\"card-img-top\" alt=\"...\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Card title</h5>\r\n          <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n        </div>\r\n      </div>`,\r\n      jsx:`<div className=\"card\" style={{width: '18rem'}}>\r\n    <div className=\"bd-placeholder-img bg-secondary card-img-top d-flex align-items-center\" style={{width:\"100%\",height:180}}>\r\n    <p className=\"mx-auto mb-0\">Image</p></div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Card title</h5>\r\n        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n      </div>\r\n    </div>`\r\n\r\n    }\r\n]\r\nexport default card","const tooltip=[{\r\n    input:\"tooltip\",\r\n    html:`<button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">\r\n    Tooltip on top\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tooltip on right\">\r\n    Tooltip on right\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Tooltip on bottom\">\r\n    Tooltip on bottom\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tooltip on left\">\r\n    Tooltip on left\r\n  </button>`,\r\n  jsx:`<div>\r\n  <button type=\"button\" className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">\r\n    Tooltip on top\r\n  </button>\r\n  <button type=\"button\" className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Tooltip on right\">\r\n    Tooltip on right\r\n  </button>\r\n  <button type=\"button\" className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Tooltip on bottom\">\r\n    Tooltip on bottom\r\n  </button>\r\n  <button type=\"button\" className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tooltip on left\">\r\n    Tooltip on left\r\n  </button>\r\n</div>\r\n`\r\n}]\r\n\r\nexport default tooltip","const toast = [{\r\n    input:\"toast\",\r\n    html:`<div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n    <div class=\"toast-header\">\r\n      <img src=\"...\" class=\"rounded mr-2\" alt=\"...\">\r\n      <strong class=\"mr-auto\">Bootstrap</strong>\r\n      <small>11 mins ago</small>\r\n      <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"toast-body\">\r\n      Hello, world! This is a toast message.\r\n    </div>\r\n  </div>`,\r\n  jsx:`<div className=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n  <div className=\"toast-header\">\r\n    <img src=\"...\" className=\"rounded mr-2\" alt=\"...\" />\r\n    <strong className=\"mr-auto\">Bootstrap</strong>\r\n    <small>11 mins ago</small>\r\n    <button type=\"button\" className=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n  </div>\r\n  <div className=\"toast-body\">\r\n    Hello, world! This is a toast message.\r\n  </div>\r\n</div>\r\n`\r\n}]\r\n\r\nexport default toast","import alert from \"./data/alert\";\r\nimport badge from \"./data/badge\";\r\nimport button from \"./data/button\";\r\nimport card from \"./data/card\";\r\nimport tooltip from \"./data/tooltip\";\r\nimport toast from \"./data/toast\";\r\n\r\n\r\nconst commands = [\r\n   ...button,...card,...tooltip,...toast\r\n,\r\n  {\r\n    input: 'navbar',\r\n    jsx: `<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\" />\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n            <div className=\"dropdown-divider\" />\r\n            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n          </div>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"#\" tabIndex={-1} aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"form-inline my-2 my-lg-0\">\r\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n  `,\r\n    html: `<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n  </div>\r\n</nav>`\r\n  },\r\n  {\r\n  ...alert\r\n  },\r\n  {\r\n    ...badge\r\n  }\r\n];\r\n\r\nexport default commands;\r\n","import commands from '../../commands';\r\nconst InitialState = {\r\n  commands: [...commands],\r\n  output: {},\r\n  error: {\r\n    enabled: false,\r\n    message: ''\r\n  }\r\n};\r\n\r\nexport default InitialState;\r\n","import { GENERATE_COMMAND } from '../actions/actions-type';\r\nimport InitialState from '../state';\r\n\r\nconst reducer = (state = InitialState, action) => {\r\n  switch (action.type) {\r\n    case GENERATE_COMMAND: {\r\n      const output = state.commands.find(\r\n        command => command.input === action.payload\r\n      );\r\n      if (output) {\r\n        return { ...state, output: output };\r\n      } else {\r\n        const error = {\r\n          enabled: true,\r\n          message: ' Unknown command! Please try again.'\r\n        };\r\n        return { ...state, error: error };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as toastrReducer } from 'react-redux-toastr';\r\nimport reducer from './reducer';\r\n\r\nconst reducers = {\r\n  appreducer: reducer,\r\n  toastr: toastrReducer\r\n};\r\nconst store = createStore(\r\n  combineReducers(reducers),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nconst Main = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}